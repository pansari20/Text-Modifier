{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","style","fontSize","title","type","id","aboutText","onClick","toggleMode","TextForm","useState","text","setText","backgroundColor","color","value","onChange","event","target","placeholder","rows","length","split","disabled","newText","toLowerCase","toUpperCase","replace","copiedText","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","App","setmode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5e618f76.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                <a className=\"navbar-brand\" href=\"#\" style={{fontSize: '1.5rem'}}>{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        {/* <li className=\"nav-item mx-2\"> */}\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n                        {/* </li> */}\r\n                        <li className=\"nav-item mx-2\">\r\n                            {/* <Link className=\"nav-link\" to=\"/About\">{props.aboutText}</Link> */}\r\n                            <a className=\"nav-link mx-5\" style={{fontSize: '1.2rem'}} href=\"#\">{props.aboutText}</a>\r\n                        </li>\r\n                    </ul>\r\n                <div className=\"form-check form-switch mx-3\">\r\n                    <label className={`text-${props.mode === 'dark' ? 'light' : 'dark'}`}>Dark Mode</label>\r\n                    <input onClick={props.toggleMode} className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    aboutText: PropTypes.string\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const handleUppercase = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleLowercase = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const removeSpaces = () => {\r\n        let newText = text.replace(/ {2,}/g,' ');\r\n        setText(newText);\r\n    }\r\n\r\n    const clearBox = () => { setText('') };\r\n\r\n    const countwords = () => {\r\n        if (text.length < 1) return text.split(\" \").length - 1;\r\n        else if (text[text.length - 1] === ' ') return text.split(\" \").length - 1;\r\n        else return text.split(\" \").length;\r\n    }\r\n\r\n    function copyText() {\r\n        let copiedText = document.getElementById('myInputBox');\r\n        copiedText.select();\r\n        navigator.clipboard.writeText(copiedText.value);\r\n        document.getSelection().removeAllRanges();\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // text = \"new Text\"; wrong way to change text state\r\n    // setText(\"new Text\"); Right way to change text state\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container my-5\" style={{backgroundColor: props.mode==='dark'?'#192538':'white' , color: props.mode==='dark'?'white':'black'}}> \r\n                <label id=\"myInputLabel\" className=\"form-label\">Enter text to analyze :</label>\r\n                <textarea style={{backgroundColor: props.mode==='dark'?'#192538':'white' , color: props.mode==='dark'?'white':'black'}} value={text} onChange={handleOnChange} className=\"form-control\" id=\"myInputBox\" placeholder=\"Enter text here!\" rows=\"10\"></textarea>\r\n                <p id='lengthCounter' className=\"mx-2\">{countwords()} words and {text.length} characters</p>\r\n\r\n                <button disabled={text.length===0} className=\"btn btn-secondary my-1 mx-1 btn-sm\" onClick={handleLowercase} style={{color: props.mode==='dark'?'black':'white'}}>To LowerCase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-secondary my-1 mx-1 btn-sm\" onClick={handleUppercase} style={{color: props.mode==='dark'?'black':'white'}}>To UpperCase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-secondary my-1 mx-1 btn-sm\" onClick={removeSpaces} style={{color: props.mode==='dark'?'black':'white'}}>Remove Space</button>\r\n\r\n                <button disabled={text.length===0} type=\"button\" className=\"btn btn-outline-primary btn-sm\" id=\"resetButton\" style={{backgroundColor: props.mode==='dark'?'blue':'' , color: props.mode==='dark'?'white':''}} onClick={clearBox}>Clear Text</button>\r\n                <button disabled={text.length===0} type=\"button\" className=\"btn btn-outline-primary btn-sm mx-2\" id=\"copyButton\" style={{backgroundColor: props.mode==='dark'?'blue':'' ,color: props.mode==='dark'?'white':''}} onClick={copyText}>Copy Text</button>\r\n            </div>\r\n            <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                <label id=\"myOutputLabel\" className=\"form-label\">Preview :</label>\r\n                <p id=\"myOutputBox\"> {text} </p>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n","import './App.css';\r\n// import About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\n// import Notfound from './components/Notfound';\r\nimport React, { useState } from 'react'\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link,\r\n//   useRouteMatch,\r\n//   useParams\r\n// } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  // Dark Mode Functions\r\n  const [mode, setmode] = useState('light');\r\n  const toggleMode = () => {\r\n    if (mode === 'light') {\r\n      setmode('dark');\r\n      document.body.style.backgroundColor = '#192538';\r\n    }\r\n    else {\r\n      setmode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Navbar title=\"Text Modifier\" aboutText=\"Welcome! Made by Ayush Pansari \" mode={mode} toggleMode={toggleMode} />\r\n    <TextForm mode={mode} />\r\n    {/* // <Router>\r\n    //   <Switch>\r\n    //     <Route exact path=\"/about\">\r\n    //       <About mode={mode} />\r\n    //     </Route>\r\n    //     <Route exact path=\"/\">\r\n    //     </Route>\r\n    //     <Notfound mode={mode} />\r\n    //   </Switch>\r\n    // </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}